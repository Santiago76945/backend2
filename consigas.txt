Entrega Final de tu Proyecto

Contexto
Se profundizará sobre los roles de los usuarios, las autorizaciones y sobre la lógica de compra.

Objetivos
Objetivo general

Profesionalizar el servidor desarrollado en la primera pre-entrega.

Objetivos específicos

Aplicar una arquitectura profesional para el servidor.

Incorporar buenas prácticas: patrones de diseño, mailing, variables de entorno, etc.

Formato de entrega
Link al repositorio de GitHub con todo el proyecto (sin la carpeta node_modules).

Archivo .env con todas las variables necesarias para correr la aplicación.

Se debe entregar
Persistencia “limpia”

Modificar la capa de persistencia para aplicar los conceptos de DAO y DTO.

Repository Pattern

Implementar el patrón Repository para orquestar el acceso a datos en la lógica de negocio.

Ruta /current segura

Modificar el endpoint /current para no exponer información sensible.

Devolver únicamente un DTO con los campos estrictamente necesarios del usuario.

Middleware de autorización

Crear un middleware que, junto con la estrategia “current”, restrinja el acceso a los endpoints:

Administrador: sólo puede crear, actualizar y eliminar productos.

Usuario: sólo puede agregar productos a su propio carrito.

Lógica de compra

En el router de carritos, implementar la ruta

ruby
Copy
Edit
POST /api/carts/:cid/purchase
que finalice el proceso de compra de ese carrito, tal que:

Corroborar stock al momento de la compra:

Si hay stock suficiente para la cantidad pedida, restarlo y seguir.

Si no, excluir ese producto de la compra.

Resultado:

Devolver un arreglo con los IDs de los productos no procesados por falta de stock.

El carrito del usuario, al terminar, debe contener sólo los productos que no pudieron comprarse.

Servicio de Tickets

Integrar un servicio que genere un Ticket con los datos de la compra.

Modelo Ticket (Mongo):

id (autogenerado)

code: string único autogenerado

purchase_datetime: fecha y hora exactas de la compra

amount: número, total de la compra

purchaser: correo del usuario comprador

Al cumplimentar la compra, crear y almacenar el ticket.